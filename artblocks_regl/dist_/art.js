let e,n,o,t,s,a;tokenData.hash="0x36cd6a65a9949303468cbdf2b9ecae21cfac999127dbc90b1ca85381baadeb91",console.log(tokenData.hash);let l=Math,r=l.min,i=l.max,p=l.floor,c=l.abs,f=l.cos,m=l.sin,rotArray=e=>e[0].map(((n,o)=>e.slice().reverse().map((e=>e[o]))));const y=0,d=3,b=4,u=5,h=6,g=7,v=30;let x,k,z,_,S,w,B,C,V,$,A,E,N,M,R,F,P,T,I,L,D,X,j,O,U,K=.95532,H=40,q=10,init=()=>{e=new Uint32Array([0,1,n=t=2,3].map((e=>parseInt(tokenData.hash.substr(8*e+2,8),16)))),o=()=>(t=e[3],e[3]=e[2],e[2]=e[1],e[1]=n=e[0],t^=t<<11,e[0]^=t^t>>>8^n>>>19,e[0]/2**32),s=(e,n)=>e[e.length*o()**(n||1)|0],a=e=>e.map((e=>[e,o()])).sort(((e,n)=>e[1]-n[1])).map((e=>e[0])),F=[],P=1e-6,E={Symmetry:o()**4*2|0,Studs:o()**8*2|0,Palette:0,ColorScheme:5*(1-o()**.3)|0,Layout:0,Height:0,Eyes:0,Aerials:0,BlocksNumber:0,BackgroundType:s([2,1],.5),BackgroundLight:(3*o()|0)-1},x=3.1415*(E.Symmetry-.5)/2-3.1415;let l=[{gs:8+2*o()|0,blocksNumber:30,fitnessFunctionNumber:5,maxTry:8,extra:0},{gs:8+2*o()|0,blocksNumber:30,fitnessFunctionNumber:3,maxTry:8,extra:o()**4*8},{gs:4,blocksNumber:3+4*o()|0,fitnessFunctionNumber:0,maxTry:1,extra:1},{gs:6+4*o()|0,blocksNumber:10+20*o()|0,fitnessFunctionNumber:2,maxTry:6,extra:2*o()},{gs:6+(0|o()),blocksNumber:10+10*o()|0,fitnessFunctionNumber:0,maxTry:4,extra:o()**2*3}];E.Layout=o()**.3*l.length|0,({gs:B,blocksNumber:C,fitnessFunctionNumber:V,maxTry:$,extra:A}=l[E.Layout]),k=2+2*o()|0,R=[],E.Palette=o()**.5*8|0,w="dddddd888888555555222222aaaaaaf26b21fbb04099ca3c208b3afcec529b5de5f15bb500bbf900f5d4fee440f1faeea8dadc457b9d1d3557e6394650514ff25f5c247ba070c1b3ffe066541388d90368f1e9da2e294effd4001f20414b3f72119da419647effc857540d6eee4266f3fcf01f271bffd23fe4572e29335ca8c686669bbcf3a712".slice(30*E.Palette,30*(E.Palette+1)),console.log("u_palette",w);let r=3*o()+1|0;w=w.substring(6*r)+w.substring(0,6*r),console.log("u_palette",w),w=w.match(/(.{2})/g).map((e=>Number("0x"+e)/255))};function placeBlocks(){let e=a([{size:[2,1,2],maskTop:[[0,1],[0,1]],type:d},{size:[2,1,2],maskBottom:[[0,1],[0,1]],type:b},{size:[2,1,4],type:y},{size:[2,1,3],type:y},{size:[1,1,6],type:y},{size:[1,2,3],maskBottom:[[1,0,1]],type:u},{size:[1,1,3],type:y},{size:[2,1,2],type:y},{size:[1,1,1],type:y},{size:[1,2,1],type:y}].filter((e=>e.size[2]<B))).slice(0,k),n=a([{size:[1,4,1],maskTop:[[0]],type:6},{size:[1,.5,1],maskTop:[[0]],type:7}]);N=[...Array(B)].map((()=>Array(B).fill(0))),M=[...Array(B)].map((()=>Array(B).fill(0)));for(let t=0;t<C;t++){let a,r,f,m=0,y=-9e9,d=0,b=s(e);t>=C-A&&4!=E.ColorScheme&&(b=s(n,.7),V=6,$=6,d=1);for(let e=0;e<$;e++){f=JSON.parse(JSON.stringify(b)),f.color=4*o()+1|0,f.color2=4*o()+1|0,2==E.ColorScheme&&(f.color=f.color2=1),f.texture=4*o()|0,1==E.ColorScheme&&(f.texture=0),f.symX=1,f.rot=4*o()|0,7==f.type&&(f.rot=0);let makeMask=()=>Array(9).fill(Array(9).fill(1));f.maskBottom=f.maskBottom||makeMask(),f.maskTop=f.maskTop||makeMask(),f.span=[...f.size];for(let e=0;e<f.rot;e++)f.span.reverse(),f.maskBottom=rotArray(f.maskBottom),f.maskTop=rotArray(f.maskTop),f.symX=!f.symX;if(f.span[0]>B/2){$<30&&$++;continue}f.pos=B%2==0?[f.span[0]/2+(o()*(B/2+1-f.span[0])|0),0,-B/2+f.span[2]/2+(o()*(B+1-f.span[2])|0)]:[f.span[0]/2+(o()*((B-1)/2+1-f.span[0])|0)+.5,0,-B/2+f.span[2]/2+(o()*(B+1-f.span[2])|0)],f.span[0]%2==B%2&&o()<1/(B-f.span[0])&&(f.span[0]%2||f.symX)&&(f.pos[0]=0);let n=0,t=0,s=[...Array(f.span[0])].map(((e,n)=>f.pos[0]+n-(f.span[0]-1)/2)),d=[...Array(f.span[2])].map(((e,n)=>f.pos[2]+n-(f.span[2]-1)/2));for(let e of s)for(let o of d)e>=0?t++:n++;let u=0,h=0,g=0,v=0;for(let e of d)for(let n of s){let o=v%f.span[0],t=p(v/f.span[0]);v++,h=i(h,N[n+B/2-.5][e+B/2-.5]),g=i(g,M[n+B/2-.5][e+B/2-.5]),1==f.maskBottom[o][t]&&(u=i(u,N[n+B/2-.5][e+B/2-.5]))}u<g||u>h?$<30&&$++:(a=[0,-l.hypot(f.pos[0],f.pos[2]),-u,-l.hypot(f.pos[0],u-10,f.pos[2]),-c(l.hypot(f.pos[0],u-10,f.pos[2])-B),-c(l.hypot(f.pos[0],2*u,f.pos[2])-B),2*u+f.pos[2]][V],(a>y||0==e)&&(y=a,m=u,r=f))}if(r&&(r.pos[1]=m+r.size[1]/2,r.pos[1])){if(d&&r.pos[1]-r.span[1]/2==0)continue;let e=Array(r.span[0]).fill().map(((e,n)=>r.pos[0]+n-(r.span[0]-1)/2)),n=Array(r.span[2]).fill().map(((e,n)=>r.pos[2]+n-(r.span[2]-1)/2)),o=0;for(let t of n)for(let n of e){let e=o%r.span[0],s=p(o/r.span[0]);o++,N[n+B/2-.5][t+B/2-.5]=m+r.size[1],0==r.maskTop[e][s]&&(N[n+B/2-.5][t+B/2-.5]=-99),M[n+B/2-.5][t+B/2-.5]=m+r.size[1]}R.push(r);for(let e=0;e++<8;){let n=[0,0,0].map(((n,o)=>(e>>o&1)-.5));F.push([n[0]*(r.span[0]+2*r.pos[0]),n[1]*r.span[1]+r.pos[1],n[2]*r.span[2]+r.pos[2]])}E.BlocksNumber++,7==r.type&&E.Eyes++,6==r.type&&E.Aerials++,r.pos[0]>0&&(E.BlocksNumber++,7==r.type&&E.Eyes++,6==r.type&&E.Aerials++)}}}let J,G,findViewBox=()=>{T={top:-1e9,bottom:1e9,left:1e9,right:-1e9};let rot=(e,n,o)=>[e*f(o)-n*m(o),e*m(o)+n*f(o)];F.forEach((e=>{let[n,o,t]=e;[n,t]=rot(n,t,-x),[o,t]=rot(o,t,-K),T.left=r(n,T.left),T.right=i(n,T.right),T.bottom=r(o,T.bottom),T.top=i(o,T.top)})),T.width=T.right-T.left,T.height=T.top-T.bottom,T.scale=i(T.width/1.8,T.height/1.8,1),T.offset={x:T.left+T.width/2,y:T.bottom+T.height/2}};G=document.createElement("div"),G.classList.add("debug"),G.style.width="800px",G.style.height="100px",document.body.appendChild(G),init(),placeBlocks(),findViewBox(),console.log(w),u_colors=R.map((e=>[e.color,e.color2,e.texture])).flat();let W="";W+=R.map(((e,n)=>`positions[${n}]=vec3(${e.pos[0]},${e.pos[1]},${e.pos[2]});`)).join(""),W+=R.map(((e,n)=>`sizes[${n}]=vec3(${e.size[0]},${e.size[1]},${e.size[2]});`)).join(""),W+=R.map(((e,n)=>`colors[${n}]=ivec3(${e.color},${e.color2},${e.texture});`)).join(""),W+=R.map(((e,n)=>`roty[${n}]=vec2(${e.rot},${e.type});`)).join("");let Q=Math.min(window.innerWidth,window.innerHeight)*window.devicePixelRatio,Y=document.createElement("canvas");Y.style.width=Q/window.devicePixelRatio+"px",Y.style.height=Q/window.devicePixelRatio+"px",Q=r(Q,2048);let Z=Math.floor(64e3/Q),ee=document.createElement("canvas");var ne=Y.getContext("2d");document.body.appendChild(ee),document.body.appendChild(Y),ee.style.width=ee.style.height=8,Y.style.background=`rgb(${w.slice(0,3).map((e=>255*e))})`,4!=E.ColorScheme&&3!=E.ColorScheme||(Y.style.background="#333"),ee.width=Z,ee.height=Q,Y.width=Q,Y.height=Q;var oe=createREGL(ee);console.log("regl.limits.maxViewportDims",oe.limits.maxViewportDims),console.log("regl.limits.maxRenderbufferSize",oe.limits.maxRenderbufferSize);const te=oe({frag:`precision highp float;\n            #define BLOCKS_NUMBER_MAX 60\n            #define PI 3.1415\n            #define S smoothstep\n            #define V vec3\n            #define v vec2\n            float rnd(float x) {return fract(54321.987 * sin(987.12345 * mod(x,12.34567)));}\n            mat2 rot(float a) {return mat2(cos(a),-sin(a),sin(a),cos(a));}\n            #define STEPS 4e2\n            #define EPS .001\n            float sabs(float p) {return sqrt(abs(p)*abs(p)+5e-5);}\n            float smax(float a, float b) {return (a+b+sabs(a-b))*.5;}\n            \n            // vec3 positions[BLOCKS_NUMBER_MAX];\n            vec3 positions[BLOCKS_NUMBER_MAX];\n            // vec3 sizes[BLOCKS_NUMBER_MAX];\n            vec3 sizes[BLOCKS_NUMBER_MAX];\n            // vec2 roty[BLOCKS_NUMBER_MAX];\n            vec2 roty[BLOCKS_NUMBER_MAX];\n            // ivec3 colors[BLOCKS_NUMBER_MAX];\n            ivec3 colors[BLOCKS_NUMBER_MAX];\n            \n            uniform V palette[20];\n            uniform float aa;\n            uniform vec2 res;\n            uniform vec4 vb;\n    \n            ivec3 colIds;\n            float gl;\n            float camDist = 1e2;\n            \n\n\n\n\n\n            float cyl(V p, V s, float cornerR) {\n                // s.x — height\n                // s.y — thickness\n                // s.x — radius\n                p.y -= clamp(p.y, -s.x, s.x);\n                float len = length(p.xz) - s.z;\n                len -= clamp(len, -s.y, s.y);\n                float cyl = length(v(len, p.y)) - cornerR;\n                return cyl;\n            }\n\n\n\n\n            \n            int eye;\n\n            float tube(vec3 p, float h, float d, float innerHole){\n                // clamp height\n                p.y -= clamp(p.y, EPS, h);\n                // torus\n                vec2 po = vec2(length(p.xz), p.y);\n                // hole clamping\n                po.x -= clamp(po.x, innerHole, d);\n                return length(po)-EPS;\n            }\n            \n            float dist(V p) {\n                colIds = ivec3(0, 0, -1);\n                p.x = abs(p.x);\n                float res = p.y + 1.; // floor plane\n                for(int i = 0; i < BLOCKS_NUMBER_MAX; i++) {\n                    eye = 0;\n                    if(i >= ${R.length})\n                        break;\n                    V pb = p;\n                    pb -= positions[i];\n                    pb.xz *= rot(roty[i].x * PI / 2.);\n            \n                    // box\n                    float cornerR = .01;\n                    float gap = .008;\n                    float block;\n        \n                    // if(roty[i].y == 0. || roty[i].y == 3. || roty[i].y == 4. || roty[i].y == 5. || roty[i].y == 6.) {\n                    V s = sizes[i] - 2. * (cornerR + gap);\n                    block = length(pb - clamp(pb, -(s)/2., (s)/2.)) - cornerR * 1.4;\n                    // }\n            \n                    if(roty[i].y == 5.) { // arc\n                        float cyl = length(pb.zy) - .5;\n                        float box = max(abs(pb.z) - .5, abs(pb.y + sizes[i].y / 2.) - 1.);\n                        float hole = min(cyl, box);\n                        block = max(block, -hole);\n                    }\n\n\n\n                    // TODO reuse code for eye and the base of an\n                    if(roty[i].y == 6.) { // pillar\n                        // float cyl_ = length(pb.zx) - .15;\n\n                        float cyl_ = tube(pb+vec3(0,1.6-cornerR*2.,0),3.6-cornerR*2.,.15,0.);\n                        // float sph = cyl(\n                        //     pb + V(0, 0, 0) / 2., \n                        //     V(.2, .25, .2), \n                        //     0.);\n                        // s.x — height\n                        // s.y — thickness\n                        // s.x — radius\n                        float sph = tube(pb+vec3(0,2.-cornerR*2.,0),.4-cornerR*2.,.45,0.);\n                        block = min(cyl_, sph);\n                    }\n            \n\n\n\n\n                    // studs\n                    if(roty[i].y != 6.) { // not pillar\n                        V ps = pb;\n                        // repetition\n                        v l = sizes[i].xz;\n                        ps.xz += (l - 1.) / 2.;\n                        ps.xz = ps.xz - clamp(floor(ps.xz + .5), v(0.), l - 1.);\n                        \n                        // position\n                        ps.y -= sizes[i].y / 2. + .02;\n\n                        float stud = tube(ps, .24, .28, mix(EPS,.18,${E.Studs}.));\n                        block = min(stud, block);\n                    }\n            \n                    if(pb.z<0.15 && (roty[i].y == 3. || roty[i].y == 4.)) { // beak\n                        block = smax(block, (-pb.z*.8-(roty[i].y == 3. ? -1. : 1.)*pb.y-.5)/1.4142);\n                    }\n            \n            \n                    if(roty[i].y == 7.) { // eye\n                        // float eye_ = cyl(pb, V(.2, .25, .2), cornerR);\n                        float eye_ = tube(pb+vec3(0,.25-cornerR*2.,0),.4-cornerR*2.,.45,0.);\n                        block = eye_;\n                        if(eye_ < EPS) {\n                            eye = 1;\n                        }\n                    }\n            \n                    if(block < res) {\n                        res = block;\n                        colIds = colors[i];\n                    }\n                    if(res < EPS)\n                        break;\n                }\n                return res;\n            }\n            \n            V norm(V p) {\n                v e = v(.01, 0.);\n                return normalize(V(dist(p + e.xyy) - dist(p - e.xyy), dist(p + e.yxy) - dist(p - e.yxy), dist(p + e.yyx) - dist(p - e.yyx)));\n            }\n            void main() {\n                V o = V(0);\n                ${W}\n                vec2 uv, uvI = (gl_FragCoord.xy * 2. - res)/res;\n    \n                for(float A = 0.; A < 8.; A++){\n                    if(A >= aa) break;\n                    gl = 0.;\n                    float d = 0., e = 1e9, ep, j;\n    \n                    float fl = floor(A/2.);\n                    float fr = mod(A,2.);\n                    vec2 pos = vec2(fr/2.,fl/4.)-.5;\n                    if(mod(fl, 2.)==0.) pos.x += .25; //https://bit.ly/30g2DXs\n    \n                    // pos *= 0.;\n            \n                    // float tick = mod(f,8.);\n                    // float fl = floor(tick/2.);\n                    // float fr = mod(tick,2.);\n                    // vec2 pos = vec2(fr/2.,fract(fl/2.));\n                    // if(floor(fl/2.)==1.) pos += .25;\n            \n                    // float fl = floor(tick/4.);\n                    // float fr = mod(tick,4.);\n                    // vec2 pos = vec2(fr/4.,fl/8.);\n                    // if(mod(fl, 2.)==0.) pos.x += 1./8.; // https://bit.ly/3qFnhLs\n    \n                    vec2 uv = uvI;\n\n                    // pos*=0.; // FIXME\n\n                    uv += pos * 2. / res;\n                    // uv /= res/res_render;\n                    // uv -= 1.;\n                    // uv /= 2.;\n                    uv = uv * .5 + .5;\n                    uv *= vb.zw;\n                    uv += vb.xy;\n                    uv = uv * 2. - 1.;\n    \n                    V p, ro = V(uv * float(${T.scale}) + \n                    v(${T.offset.x},\n                    ${T.offset.y}), -camDist), \n                    rd = V(0, 0, .9 + .1 * rnd(length(uv)));\n                    bool outline = false;\n                    for(float i = 0.; i < STEPS; i++) {\n                        j = i;\n                        p = d * rd + ro;\n                        p.z -= camDist;\n                        p.yz *= rot(${K});\n                        p.xz *= rot(${x});\n                        d += e = dist(p);\n                        if(ep < e && e < .01) {\n                            // gl_FragColor = vec4(0);\n                            outline = true;\n                            break;\n                        }\n                        ep = e;\n                        if(e < EPS || e > camDist*2.)\n                            break;\n                    }\n                    V c;\n                    if(!outline) {\n                        V col1, col2;\n                        for(int j = 0; j < 20; j++) {\n                            if(colIds[0] == j)\n                                col1 = palette[j];\n                            if(colIds[1] == j)\n                                col2 = palette[j];\n                        }\n                \n                        V col = col1;\n                \n                        // Texturing\n                        //\n                        // layers\n                        if(colIds.z == 1)\n                            if(sin(p.y * PI * 3.) > 0.)\n                                col = col2;\n                        if(colIds.z == 2)\n                            if(sin((p.x + fract(positions[0].x - sizes[0].x / 2.)) * PI * 2. * 1.5) > 0.)\n                                col = col2;\n                                \n                        // pride\n                        if(${E.ColorScheme} == 3)\n                            col = sin((length(p) / max(float(${B}), float(${E.Height})) * 2. - V(0, .3, .6)) * 6.28) * .5 + .5;\n                        \n                        if(eye == 1) {\n                            col = V(0);\n                            V pe = p + fract(${B}. / 2.);\n                            pe = fract(pe) - .5;\n                            col += step(.3, length(pe.xz));\n                            col += step(-.1, -length(pe.xz + .1));\n                        }\n                                \n                        if(colIds.z == -1) {\n                            c = palette[0];\n                            if(length(c) > .4){\n                                c *= smoothstep(5., 0., length(uv + v(${E.BackgroundLight}, -1)));\n                            }\n                            // c = V(1,0,1);\n                            if(${E.ColorScheme} == 3){\n                                c = V(.2);\n                            }\n                            if(sin(length(pow(abs(uv), v(${E.BackgroundType}))) * 32.) > 0.)\n                                c *= .95;\n                        } else {\n                            c = V(1,0,1);\n                            // shading\n                            c = (min(1.5, 14. / j) * .2 + .8) * (dot(norm(p), normalize(V(0, 1, 1))) * .2 + .8) * col;\n                            \n                            // glare\n                            c += pow(abs(dot(norm(p), normalize(V(0., 3., 1.)))), 40.);\n                            // c.r = 1.;\n                        }\n                    }\n                    \n                    // gazya\n                    if(${E.ColorScheme} == 4)\n                        c = (V(7. / j));\n                \n                    // gl_FragColor = vec4(o*rnd(${P}), 1);\n                    // gl_FragColor=vec4(uv,0,1);\n                    // gl_FragColor = vec4(o, 1);\n                    // gl_FragColor = mix(texture2D(backbuffer, uv * v(1, -1) * .5 + .5), vec4(o, 1), 1. / (tick + 1.));\n                    // o += step(.5,fract(length(uv)*4.));\n                    o += c;\n                }\n                gl_FragColor = vec4(o/aa,1);\n                // gl_FragColor = vec4(vec3(mod(gl_FragCoord.x/2.+gl_FragCoord.y/2.,2.)),1);\n                // gl_FragColor = vec4(1,0,0,1);\n            }`,vert:"attribute vec2 position;void main(){gl_Position=vec4(position,0,1);}",attributes:{position:[[-1,-1],[-1,1],[1,-1],[-1,1],[1,-1],[1,1]]},uniforms:{res:oe.prop("res"),palette:w,aa:oe.prop("aa"),vb:oe.prop("vb")},scissor:{enable:!0,box:{x:oe.prop("x"),y:oe.prop("y"),width:oe.prop("w"),height:oe.prop("h")}},count:6});t=+new Date;let se,ae=1,le=8,re=0,ie=128,pe=Math.floor(Q/ie),ce=-pe,fe=0,me=oe.frame((function(){te({res:[ce+ae,Q],vb:[ce/Q,0,(ce+ae)/Q,1],x:0,y:0,h:Q,w:ae,aa:le}),window.document.title=(ce/Q).toFixed(3),ne.drawImage(ee,ce,0),ce+=ae,new Date-t>160&&(ae=Math.max(1,ae-4)),new Date-t<80&&(ae=Math.min(Z,ae+4)),1==ae?fe++:fe=0,document.querySelector(".debug").innerHTML=fe,fe>8&&(le=1),t=+new Date,ce>Q&&(window.document.title="👾",console.log("FINISHED in ",new Date-se),me.cancel())}));'tx shvembldr piter stranger'